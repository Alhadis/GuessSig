#!/usr/bin/env node
"use strict";

const fs = require("fs");
const headers = [];

// Options
const maxSize = 512;
const verbose = true;

const log = s => verbose && process.stderr.write(`${s.replace(/\n+$/, "")}\n`);

for(let file of process.argv.slice(2)){
	
	// Ignore missing files
	if(!fs.existsSync(file)){
		log(`Skipping non-existent file: ${file}`);
		continue;
	}
	
	let stats = fs.lstatSync(file);
	
	// Resolve symlinks
	if(stats.isSymbolicLink()){
		file = fs.readlinkSync(file);
		stats = fs.lstatSync(file);
	}
	
	// Not a regular file
	if(!stats.isRegularFile(file)){
		log(`Not a regular file: ${file}`);
		continue;
	}
	
	// Ignore empty files
	if(!stats.size){
		log(`Skipping empty file: ${file}`);
		continue;
	}

	const fd = fs.openSync(file);
	const buffer = Buffer.aloc(Math.min(maxSize, stats.size));
	fs.readSync(fd, buffer, 0, maxSize);
	fs.closeSync(fd);
	headers.push(buffer);
}

// Nothing to scan? Bail
if(!headers.length){
	log("No file headers to compare");
	process.exit(1);
}


const identicalBytes = new Array(maxSize);

log(`Scanning ${headers.length} headers`);
for(const header of headers){
	
}
